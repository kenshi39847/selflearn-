package to.msn.wings.selflearn.chap03;

public class BitwiseOperator {

	public static void main(String[] args) {
		// TODO 自動生成されたメソッド・スタブ

	}

}
/*
  整数を2進数で表したときの各桁（ビット単位）を論理計算する演算を「ビット演算」という。
  ビット演算子はさらに「ビット論理演算子」と「ビットシフト演算子」に分類できる。
*/

/*
  ビット演算では与えられた整数を2進数に変換したうえで、それぞれの桁について論理演算を実施する。
  論理積では、双方のビットが1(true)である場合にだけ結果も「1」、それ以外は「0」を返す。
  ビット演算子は、演算の結果を再び10進数に戻したものを返す。
*/

/*
  ビットシフト演算は10進数をまず2進数として算出する。そして、その桁を左または右に指定の桁だけ移動する。
  左シフトした場合、シフトした分、右側の桁を0で埋める。
*/
