package to.msn.wings.selflearn.chap02;

public class ReferenceType {

	public static void main(String[] args) {
		// TODO 自動生成されたメソッド・スタブ

	}

}

/*
  Javaの参照型には「クラス型」、「インターフェース型」、「配列型」がある。
*/

/*
  すべての文字列を普遍的に表現/操作できるようなひな形を「クラス」という。
  また、クラスで用意されたデータの入れ物を「フィールド」、データ操作するための道具を「メソッド」という。
  フィールドとメソッドを総称して「メンバー」という。
  オブジェクト指向プログラミングの世界では、あらかじめ用意されたひな形（クラス）から、
  具体的なデータ（値）を備えたオブジェクトを作成し、操作そのものはオブジェクト経由で行うのが基本である。
*/

/*
  クラスをもとに、具体的なモノを作成する作業のことを「インスタンス化」といい、
  インスタンス化によってできるモノのことを「オブジェクト（またはインスタンス）」という。
*/

/*
  クラスをインスタンス化
  クラス名 変数名 = new クラス名(引数, ...)
  File f = new File("c:\\data\\sample.dat");
*/

/*
  フィールド/メソッドの呼び出し
  オブジェクト.フィールド [= 値]
  オブジェクト.メソッド(引数, ...)
  下記はFileオブジェクトfからファイルの名前を取り出すには、getNameメソッドを呼び出す。
  var name = f.getName();
*/

/*
  フィールド/メソッドによってはオブジェクトを生成せずに、クラスから直接呼び出せるものがあり、
  これを「クラスフィールド/クラスメソッド（静的フィールド/静的メソッド）」という。
*/

/*
  クラスフィールド/クラスメソッドの呼び出し
  クラス.フィールド名 [= 値]
  クラス.メソッド(引数, ...)
*/

/*
  クラスフィールド/クラスメソッドに対してオブジェクト（インスタンス）を生成して呼び出すフィールド/メソッドのことを
  「インスタンスフィールド/インスタンスメソッド」という。
*/
