package to.msn.wings.selflearn.chap02;

public class DataType {

	public static void main(String[] args) {

	}

}

/*
  プログラムの中で扱うデータの種類のことを「データ型」という。
  Javaでは文字列を入れるべき定数に数値を代入することができない（逆もある）という性質を「静的型付け」という。
  データ型は大まかに「基本型」と「参照型」に分けられ、基本型と参照型とでは値の扱いが異なる。
  Javaの基本は「参照型」であり、基本型はその構造がシンプルで原始的であるという意味で捉えておく。
  そのため、基本型はプリミティブ（原始）型と呼ばれることもある。
*/

/*
  基本型の種類
  |分類       |データ型|サイズ |既定値|
  |整数       |byte    |1バイト|0     |
              |short   |2バイト|0     |
              |int     |4バイト|0     |
              |long    |8バイト|0     |
  |浮動小数点 |float   |4バイト|0     |
              |double  |8バイト|0     |
  |真偽       |boolean |1ピット|false |
  |文字       |char    |2バイト|\u0000|
*/

/*
  整数型
  整数型は特別な理由が無い限りint型を利用するようにする。
  long型は、int型では対応できない場合に使う。
*/

/*
  浮動小数点型
  doubleを優先して使う。絶対値が大きくなるにつれて値のとび値も大きくなる。
*/

/*
  文字型
  char型を使う。Unicodeと呼ばれる文字コード体系に従って文字を対応する数値（文字コード）で表したものを保持している。
*/

/*
  真偽型
  true/falseという2つの状態を表現する特別な型である。
*/

/*
  変数の宣言（型推論）
  「var」使うことで、変数を宣言する際にデータ型を省略できる。
  型の制約がなくなるわけではなく、代入された値からコンパイラーが自動的に型を推論し、決定する。
  var 変数名 = 初期値
  1.初期値は省略できない
  2.複数の変数をまとめて宣言できない
  3.フィールド宣言では利用できない
*/
